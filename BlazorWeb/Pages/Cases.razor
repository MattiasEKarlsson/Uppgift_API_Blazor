@page "/cases"
@inject HttpClient Http
    <Auth />





@if (cases == null)
{
   <div class="spinner"></div>
}
else
{
<div class="row m-5">
    <h1 class="text-secondary col-8">Cases</h1>
    <div class="col-1 justify-content-center">
        <NavLink href="/addcase" class="btn btn-primary form-control">New Case</NavLink>
    </div>
    <table class="table table-bordered table-striped">
        <tbody>

            <tr>
                <th width="2%">Id</th>
                <th width="8%">Clients Name</th>
                <th width="10%">Created</th>
                <th width="10%">Latest Changed</th>
                <th width="7%">Status</th>
                <th width="48%">Description</th>
                <th width="5%"></th>
            </tr>

            @foreach (var x in cases)
            {
        <tr>
            <td width="2%">@x.Id</td>
            <td width="8%">@x.Client.FullName</td>
            <td width="10%">@x.Created</td>
            <td width="10%">@x.LatestUpdate</td>
            <td width="7%">@x.StatusCode</td>
            <td width="48%">@x.Descrip</td>
            <td width="5%"><a class="btn btn-primary" href="cases/@x.Id">Edit</a></td>

        </tr>

            }
        </tbody>
    </table>
</div>
    
}

@code {
    private Case[] cases;
    


    protected override async Task OnInitializedAsync()
    {
        try
        {
            cases = await Http.GetFromJsonAsync<Case[]>("https://localhost:44350/api/cases");
        }
        catch { }


    }


}
