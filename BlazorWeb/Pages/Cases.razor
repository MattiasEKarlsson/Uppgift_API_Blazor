@page "/cases"
@inject HttpClient Http





@if (cases == null)
{
   <div class="spinner"></div>
}
else
{
<div class="container">
    <h1>Cases</h1>
    <table class="table table-bordered table-striped">
        <tbody>

            <tr>
                <th>Id</th>
                <th>Clients Name</th>
                <th>Created</th>
                <th>Status</th>
                <th>Description</th>
                <th></th>
            </tr>

            @foreach (var x in cases)
            {
                <tr>
                    <td>@x.Id</td>
                    <td>@x.Client.FullName</td>
                    <td>@x.Created</td>
                    <td>@x.StatusCode</td>
                    <td>@x.Descrip</td>
                    <buttom class="btn btn-primary">Edit</buttom>
                </tr>



            }
        </tbody>
    </table>
</div>
    
}

@code {
    private Case[] cases;
    private HttpResponseMessage result;


    protected override async Task OnInitializedAsync()
    {
        //result = await Http.PostAsJsonAsync<SignIn>("https://localhost:44350/api/users/signin",
        //    new SignIn {Email = "Matte@a.se", Password="Matte" });

        //var data = JsonConvert.DeserializeObject<dynamic>(await result.Content.ReadAsStringAsync());



        //Http.DefaultRequestHeaders.Add("Authorization", $"Bearer {data.accessToken}");
        cases = await Http.GetFromJsonAsync<Case[]>("https://localhost:44350/api/cases");
    }


}
