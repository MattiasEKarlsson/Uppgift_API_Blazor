@page "/signup"
@inject HttpClient Http
@inject NavigationManager NavManager

<h2>Resister User</h2>
<div class="row">
    <div class="col-md-4">
        <section>
            <EditForm Model="@user" OnSubmit="@CreateUserAsync">
                <hr />
                <div class="form-group mt-2">
                    <span>FirstName</span>
                    <input type="text" class="form-control" @bind="user.FirstName" required />
                </div>
                <div class="form-group mt-2">
                    <span>LastName</span>
                    <input type="text" class="form-control" @bind="user.LastName" required />
                </div>
                <div class="form-group mt-2">
                    <span>Email</span>
                    <input type="text" class="form-control" @bind="user.Email" required />
                </div>
                <div class="form-group mt-2">
                    <span>Password</span>
                    <input type="password" class="form-control" @bind="user.Password" required />
                </div>
                <div class="form-group mt-5">
                    <button type="submit" class="btn btn-info text-white">Register</button>
                </div>
            </EditForm>
        </section>
    </div>
</div>






@code {
    private SignUp user;
    private HttpResponseMessage result;

    private async Task CreateUserAsync()
    {
        try
        {
            result = await Http.PostAsJsonAsync<SignUp>("https://localhost:44350/api/users/signup", user);

            if (result.IsSuccessStatusCode)
            {
                NavManager.NavigateTo("/index");
            }
            else
            {
                NavManager.NavigateTo("/errorpage");
            }
        }
        catch
        {

        }

    }

    protected override void OnInitialized()
    {
        user = new SignUp();
    }
}
