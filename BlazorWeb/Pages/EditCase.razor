@page "/cases/{id}"
@inject HttpClient Http
@inject NavigationManager NavManager
    <Auth />


<div class="container">
    <h1>Update</h1>
    <hr />
    <EditForm Model="@cases" OnSubmit="@UpdateCaseAsync">

        <div class="form-group w-25">
            <span>Case ID</span>
            <input type="text" class="form-control" @bind="cases.Id" disabled />
        </div>
        <div class="form-group w-100">
            <span>Description</span>
            <textarea type="text" class="form-control" @bind="cases.Descrip" required />
        </div>
        <div class="form-group w-100">
            <span>Created</span>
            <input type="text" class="form-control" @bind="cases.Created" disabled />
        </div>
        <div class="form-group w-100">
            <span>Latest Update</span>
            <input type="text" class="form-control" @bind="cases.LatestUpdate" disabled />
        </div>
        <select @bind="cases.StatusCode" class="form-group dropdown btn btn-secondary w-25 " aria-label="Change Status" required>
            <option value="Ej påbörjad">Ej påbörjad</option>
            <option value="Pågår" >Pågår</option>
            <option value="Avslutad" >Avslutad</option>
        </select>


        <hr />
        <div class="form-group w-25">
            <button type="submit" class="btn btn-primary oi oi-plus w-50 h-50"></button>
        </div>
    </EditForm>
</div>




@code {
    [Parameter]
    public string Id { get; set; }
    private HttpResponseMessage result;
    private Case cases { get; set; }


    protected override async Task OnInitializedAsync()
    {

        try
        {
            cases = new Case();
            var id = int.Parse(Id);
            cases = await Http.GetFromJsonAsync<Case>($"https://localhost:44350/api/cases/{id}");
        }
        catch { }

    }

    private async Task UpdateCaseAsync()
    {

        try
        {
            cases.LatestUpdate = DateTime.Now;
            result = await Http.PutAsJsonAsync<Case>($"https://localhost:44350/api/cases/{Id}", cases);

            if (result.IsSuccessStatusCode)
            {
                NavManager.NavigateTo("/cases");
            }
            else
            {
                NavManager.NavigateTo("/errorpage");
            }

        }
        catch { }
    }

}
