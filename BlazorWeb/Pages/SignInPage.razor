@page "/"
@inject HttpClient Http
@inject NavigationManager NavManager

    <h2>Sign In</h2>
<div class="row">
    <div class="col-md-4">
        <section>
            <EditForm Model="@signIn" OnSubmit="@SignInAsync">
                <hr />
                <div class="form-group mt-2">
                    <label>Email</label>
                    <input type="text" class="form-control" @bind="signIn.Email" required />
                </div>
                <div class="form-group mt-2">
                    <label>Password</label>
                    <input type="password" class="form-control" @bind="signIn.Password" required />
                </div>
                <div class="form-group mt-5">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </EditForm>
        </section>
    </div>
</div>




@code {
    private SignIn signIn;
    private HttpResponseMessage result;
    private bool token;

    private async Task SignInAsync()
    {
        try
        {
            result = await Http.PostAsJsonAsync<SignIn>("https://localhost:44350/api/users/signin",
            new SignIn { Email = signIn.Email, Password = signIn.Password });

            if (result.IsSuccessStatusCode)
            {
                token = true;
                await sessionStorage.SetItemAsync<string>("auth", token.ToString());

                var data = JsonConvert.DeserializeObject<dynamic>(await result.Content.ReadAsStringAsync());

                Http.DefaultRequestHeaders.Add("Authorization", $"Bearer {data.accessToken}");
                NavManager.NavigateTo("/index");
            }
            else
            {
                NavManager.NavigateTo("/errorpage");
            }

        }
        catch { }


    }

    protected override void OnInitialized()
    {
        signIn = new SignIn();
    }
}
