@page "/addcase"
@inject HttpClient Http
@inject NavigationManager NavManager
<Auth />

<h2>Create Case</h2>
<div class="row">
    <div class="col-md-4">
        <section>
            <EditForm Model="@casee" OnSubmit="@CreateCaseAsync">

                <div class="form-group mt-2">
                    <h5>
                        Enter your UserId
                    </h5>
                    <input type="text" class="form-control" placeholder="User" @bind="casee.UserId" required />
                </div>

                <select @bind="casee.ClientId" class="form-group form-control dropdown btn btn-info mt-2 " aria-label="Select Client" required>
                    <option selected>Select Client</option>
                    @foreach (var client in clients)
                    {
                        <option value="@client.Id">@client.FullName</option>
                    }
                </select>

                <div class="form-group  mt-2">
                    <textarea type="text" class="form-control" placeholder="Description" @bind="casee.Descrip" required />
                </div>
               
                <div class="form-group mt-5">
                    <button type="submit" class="btn btn-primary">Add Case</button>
                </div>
            </EditForm>
        </section>
    </div>
</div>






@code {
    private Case casee;
    private IEnumerable<Client> clients;
    private HttpResponseMessage result;


    private async Task CreateCaseAsync()
    {
        try
        {

            casee.Created = DateTime.Now;
            casee.LatestUpdate = DateTime.Now;
            casee.StatusCode = "Ej Påbörjad";
            result = await Http.PostAsJsonAsync<Case>("https://localhost:44350/api/cases", casee);

            if (result.IsSuccessStatusCode)
            {
                NavManager.NavigateTo("/cases");
            }
            else
            {
                NavManager.NavigateTo("/errorpage");
            }
        }
        catch { }
    }

    protected override async Task OnInitializedAsync()
    {
        casee = new Case();
        clients = new List<Client>();

        try
        {
            clients = await Http.GetFromJsonAsync<IEnumerable<Client>>("https://localhost:44350/api/clients");
        }
        catch { }

    }











}


